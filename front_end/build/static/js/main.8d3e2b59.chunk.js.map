{"version":3,"sources":["urban_dictionary.png","header.js","Content.js","firebase/index.js","Login.js","Dictionary.mp4","Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","color","purple","className","to","style","src","urban_dictionary","Content","useState","items","setItems","word","setWord","useEffect","url","Search","fetch","then","response","json","console","log","list","catch","err","error","Input","id","placeholder","onKeyDown","e","key","autoFocus","onChange","preventDefault","target","value","type","fontSize","variant","onClick","map","product","definition","example","thumbs_up","thumbs_down","defid","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","onAuthStateChanged","firebaseUser","email","password","signInWithEmailAndPassword","res","createUserWithEmailAndPassword","exact","Login","setemail","setpassword","class","alt","Firebase","align","Home","autoplay","playsinline","Dictionary","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8d3e2b59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/urban_dictionary.07e16674.png\";","import React from 'react'\r\nimport \"./header.css\";\r\nimport urban_dictionary from './urban_dictionary.png'\r\nimport {BrowserRouter  as Router, Route, Switch, Link} from 'react-router-dom';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\nfunction Header() {\r\n    const color = purple[50];\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Link to=\"/login\">\r\n                <LockOpenIcon style={{ color: color }}></LockOpenIcon>\r\n            </Link>\r\n            <center>\r\n             <h1 className=\"navbar\">Welcome to Abbreviate dictionary!</h1>\r\n             </center>\r\n             <img src={urban_dictionary}/>\r\n             <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { fade, makeStyles } from '@material-ui/core/styles';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import InputBase from '@material-ui/core/InputBase';\r\n// import Badge from '@material-ui/core/Badge';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import Menu from '@material-ui/core/Menu';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\n// import AccountCircle from '@material-ui/icons/AccountCircle';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\n// import NotificationsIcon from '@material-ui/icons/Notifications';\r\n// import MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   grow: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: theme.spacing(2),\r\n//   },\r\n//   title: {\r\n//     display: 'none',\r\n//     [theme.breakpoints.up('sm')]: {\r\n//       display: 'block',\r\n//     },\r\n//   },\r\n//   search: {\r\n//     position: 'relative',\r\n//     borderRadius: theme.shape.borderRadius,\r\n//     backgroundColor: fade(theme.palette.common.white, 0.15),\r\n//     '&:hover': {\r\n//       backgroundColor: fade(theme.palette.common.white, 0.25),\r\n//     },\r\n//     marginRight: theme.spacing(2),\r\n//     marginLeft: 0,\r\n//     width: '100%',\r\n//     [theme.breakpoints.up('sm')]: {\r\n//       marginLeft: theme.spacing(3),\r\n//       width: 'auto',\r\n//     },\r\n//   },\r\n//   searchIcon: {\r\n//     padding: theme.spacing(0, 2),\r\n//     height: '100%',\r\n//     position: 'absolute',\r\n//     pointerEvents: 'none',\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//   },\r\n//   inputRoot: {\r\n//     color: 'inherit',\r\n//   },\r\n//   inputInput: {\r\n//     padding: theme.spacing(1, 1, 1, 0),\r\n//     // vertical padding + font size from searchIcon\r\n//     paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n//     transition: theme.transitions.create('width'),\r\n//     width: '100%',\r\n//     [theme.breakpoints.up('md')]: {\r\n//       width: '20ch',\r\n//     },\r\n//   },\r\n//   sectionDesktop: {\r\n//     display: 'none',\r\n//     [theme.breakpoints.up('md')]: {\r\n//       display: 'flex',\r\n//     },\r\n//   },\r\n//   sectionMobile: {\r\n//     display: 'flex',\r\n//     [theme.breakpoints.up('md')]: {\r\n//       display: 'none',\r\n//     },\r\n//   },\r\n// }));\r\n\r\n// export default function Header() {\r\n//   const classes = useStyles();\r\n//   const [anchorEl, setAnchorEl] = React.useState(null);\r\n//   const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n//   const isMenuOpen = Boolean(anchorEl);\r\n//   const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n//   const handleProfileMenuOpen = (event) => {\r\n//     setAnchorEl(event.currentTarget);\r\n//   };\r\n\r\n//   const handleMobileMenuClose = () => {\r\n//     setMobileMoreAnchorEl(null);\r\n//   };\r\n\r\n//   const handleMenuClose = () => {\r\n//     setAnchorEl(null);\r\n//     handleMobileMenuClose();\r\n//   };\r\n\r\n//   const handleMobileMenuOpen = (event) => {\r\n//     setMobileMoreAnchorEl(event.currentTarget);\r\n//   };\r\n\r\n//   const menuId = 'primary-search-account-menu';\r\n//   const renderMenu = (\r\n//     <Menu\r\n//       anchorEl={anchorEl}\r\n//       anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n//       id={menuId}\r\n//       keepMounted\r\n//       transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n//       open={isMenuOpen}\r\n//       onClose={handleMenuClose}\r\n//     >\r\n//       <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n//       <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n//     </Menu>\r\n//   );\r\n\r\n//   const mobileMenuId = 'primary-search-account-menu-mobile';\r\n//   const renderMobileMenu = (\r\n//     <Menu\r\n//       anchorEl={mobileMoreAnchorEl}\r\n//       anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n//       id={mobileMenuId}\r\n//       keepMounted\r\n//       transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n//       open={isMobileMenuOpen}\r\n//       onClose={handleMobileMenuClose}\r\n//     >\r\n//       <MenuItem>\r\n//         <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n//           <Badge badgeContent={4} color=\"secondary\">\r\n//             <MailIcon />\r\n//           </Badge>\r\n//         </IconButton>\r\n//         <p>Messages</p>\r\n//       </MenuItem>\r\n//       <MenuItem>\r\n//         <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n//           <Badge badgeContent={11} color=\"secondary\">\r\n//             <NotificationsIcon />\r\n//           </Badge>\r\n//         </IconButton>\r\n//         <p>Notifications</p>\r\n//       </MenuItem>\r\n//       <MenuItem onClick={handleProfileMenuOpen}>\r\n//         <IconButton\r\n//           aria-label=\"account of current user\"\r\n//           aria-controls=\"primary-search-account-menu\"\r\n//           aria-haspopup=\"true\"\r\n//           color=\"inherit\"\r\n//         >\r\n//           <AccountCircle />\r\n//         </IconButton>\r\n//         <p>Profile</p>\r\n//       </MenuItem>\r\n//     </Menu>\r\n//   );\r\n\r\n//   return (\r\n//     <div className={classes.grow}>\r\n//       <AppBar position=\"static\">\r\n//         <Toolbar>\r\n//           <IconButton\r\n//             edge=\"start\"\r\n//             className={classes.menuButton}\r\n//             color=\"inherit\"\r\n//             aria-label=\"open drawer\"\r\n//           >\r\n//             <MenuIcon />\r\n//           </IconButton>\r\n//           <Typography className={classes.title} variant=\"h6\" noWrap>\r\n//             Material-UI\r\n//           </Typography>\r\n//           <div className={classes.search}>\r\n//             <div className={classes.searchIcon}>\r\n//               <SearchIcon />\r\n//             </div>\r\n//             <InputBase\r\n//               placeholder=\"Search…\"\r\n//               classes={{\r\n//                 root: classes.inputRoot,\r\n//                 input: classes.inputInput,\r\n//               }}\r\n//               inputProps={{ 'aria-label': 'search' }}\r\n//             />\r\n//           </div>\r\n//           <div className={classes.grow} />\r\n//           <div className={classes.sectionDesktop}>\r\n//             <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n//               <Badge badgeContent={4} color=\"secondary\">\r\n//                 <MailIcon />\r\n//               </Badge>\r\n//             </IconButton>\r\n//             <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n//               <Badge badgeContent={17} color=\"secondary\">\r\n//                 <NotificationsIcon />\r\n//               </Badge>\r\n//             </IconButton>\r\n//             <IconButton\r\n//               edge=\"end\"\r\n//               aria-label=\"account of current user\"\r\n//               aria-controls={menuId}\r\n//               aria-haspopup=\"true\"\r\n//               onClick={handleProfileMenuOpen}\r\n//               color=\"inherit\"\r\n//             >\r\n//               <AccountCircle />\r\n//             </IconButton>\r\n//           </div>\r\n//           <div className={classes.sectionMobile}>\r\n//             <IconButton\r\n//               aria-label=\"show more\"\r\n//               aria-controls={mobileMenuId}\r\n//               aria-haspopup=\"true\"\r\n//               onClick={handleMobileMenuOpen}\r\n//               color=\"inherit\"\r\n//             >\r\n//               <MoreIcon />\r\n//             </IconButton>\r\n//           </div>\r\n//         </Toolbar>\r\n//       </AppBar>\r\n//       {renderMobileMenu}\r\n//       {renderMenu}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n","import React, { useState, useEffect, ReactDOM } from 'react';\r\nimport './Content.css';\r\nimport Input from '@material-ui/core/Input';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Header from './header';\r\nimport ThumbDownOutlinedIcon from '@material-ui/icons/ThumbDownOutlined';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\n\r\n\r\nexport default function Content(){\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const[word,setWord]=useState(\"\");\r\n//commenting the code\r\n    useEffect(() => {\r\n     \r\n    }, [])\r\n    \r\n   const url= `https://mashape-community-urban-dictionary.p.rapidapi.com/define?term=`+word\r\n   console.log(url)\r\n   function Search(){\r\n    fetch(`https://mashape-community-urban-dictionary.p.rapidapi.com/define?term=`+word, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-key\": \"bd7cf329bemshae8e6053840605ep166442jsnc60488059d95\",\r\n                \"x-rapidapi-host\": \"mashape-community-urban-dictionary.p.rapidapi.com\"\r\n            }\r\n        })\r\n        .then(response =>response.json())\r\n        .then(response=>{\r\n            console.log(response.list)\r\n            setItems(response.list)\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n        // var axios = require(\"axios\").default;\r\n\r\n// var options = {\r\n//   method: 'GET',\r\n//   url: 'https://mashape-community-urban-dictionary.p.rapidapi.com/define',\r\n//   params: {term: 'wat'},\r\n//   headers: {\r\n//     'x-rapidapi-key': 'bd7cf329bemshae8e6053840605ep166442jsnc60488059d95',\r\n//     'x-rapidapi-host': 'mashape-community-urban-dictionary.p.rapidapi.com'\r\n//   }\r\n// };\r\n\r\n// axios.request(options).then(function (response) {\r\n// \tconsole.log(response.data);\r\n// }).catch(function (error) {\r\n// \tconsole.error(error);\r\n// });\r\n   }\r\n\r\n    return(\r\n        <div>\r\n                <Header/>\r\n                <Input className=\"input\" id=\"search\" color=\"black\" placeholder=\"Type the word to search\"\r\n                onKeyDown={e=>{\r\n\r\n                        if (e.key === 'Enter') {\r\n                                Search()                    \r\n                        }\r\n                }}\r\n                autoFocus=\"True\"\r\n                onChange={(e) => {\r\n                e.preventDefault();\r\n                console.log(e.target.value)\r\n                setWord(e.target.value)\r\n                }}></Input>\r\n\r\n                <SearchIcon\r\n                type=\"Button\"\r\n                id=\"search\" fontSize=\"medium\" variant=\"contained\" color=\"black \" \r\n                onClick={()=>{\r\n                Search();  \r\n                }}>\r\n                Click Here\r\n                </SearchIcon>\r\n                \r\n                <ul className=\"List\">{\r\n                    items.map((product) => {\r\n                    return <li key={product.defid}>\r\n                        <div className=\"card\">\r\n                            <p>{product.definition}</p>\r\n                            <h4> Example </h4>\r\n                            <p className=\"example\">\r\n                                {product.example}\r\n                            </p> \r\n                            <div className=\"thumbs_data\"> \r\n                                    \r\n                                    <ThumbUpAltOutlinedIcon className=\"thumbs\"></ThumbUpAltOutlinedIcon> {product.thumbs_up}\r\n                                    <ThumbDownOutlinedIcon className=\"thumbs\"></ThumbDownOutlinedIcon> {product.thumbs_down}\r\n                                </div>           \r\n                            <br></br>\r\n                        </div>  \r\n                    </li>\r\n                    })\r\n                }\r\n            </ul>\r\n            </div>\r\n\r\n    );\r\n}","import { ContactSupportOutlined } from '@material-ui/icons';\r\nimport firebase from 'firebase'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport  { Redirect } from 'react-router-dom'\r\n\r\n \r\nconst config = {\r\n    apiKey: \"AIzaSyAkIC7eg5rEQ7Q6Z40Ek4E0u1Ts3GjtdUc\",\r\n    authDomain: \"abbreviate-dictionary.firebaseapp.com\",\r\n    databaseURL: \"https://abbreviate-dictionary-default-rtdb.firebaseio.com\",\r\n    projectId: \"abbreviate-dictionary\",\r\n    storageBucket: \"abbreviate-dictionary.appspot.com\",\r\n    messagingSenderId: \"363209062072\",\r\n    appId: \"1:363209062072:web:b39b3246c8e3dea447e64d\",\r\n    measurementId: \"G-CRL13Q68ES\"\r\n  };\r\n \r\n  const app = firebase.initializeApp(config);\r\n  const auth =firebase.auth()\r\n  \r\n \r\n  // *** Auth API ***\r\n \r\n  const doCreateUserWithEmailAndPassword = (email, password) =>\r\n   { auth.createUserWithEmailAndPassword(email, password).\r\n    then(res=>\r\n        {console.log(\"user created\")\r\n        return <Redirect exact to='/'/>\r\n    })\r\n    .catch(res=>{\r\n        return <Redirect exact to='/'/>\r\n\r\n    });\r\n\r\n  }\r\n \r\n\r\n\r\n\r\n\r\n\r\n  const doSignInWithEmailAndPassword = (email, password) =>{\r\n    auth.signInWithEmailAndPassword(email, password).\r\n    then(res=>{\r\n      console.log(\"user signed in\")\r\n    })\r\n    .catch(error=>console.log(\"error\"));\r\n }\r\n  const doSignOut = () => auth.signOut();\r\n \r\n  const doPasswordReset = email => auth.sendPasswordResetEmail(email);\r\n \r\n  const doPasswordUpdate = password =>{\r\n    auth.currentUser.updatePassword(password);\r\n\r\n}\r\n    auth.onAuthStateChanged= firebaseUser=>{\r\n        if(firebaseUser){\r\n            console.log(firebaseUser)\r\n        }\r\n\r\n        else\r\n        console.log(\"no user found\")\r\n    }\r\n \r\nexport default {doPasswordReset,\r\n  doPasswordUpdate,\r\n  doSignOut,\r\n  doSignInWithEmailAndPassword,\r\n  doCreateUserWithEmailAndPassword\r\n};","// import React, { useState } from 'react';\r\n//  import './Login.css'\r\n// function Login(props) {\r\n//   const username = useFormInput('');\r\n//   const password = useFormInput('');\r\n//   const [error, setError] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n \r\n//   // handle button click of login form\r\n//   const handleLogin = () => {\r\n//     props.history.push('/dashboard');\r\n//   }\r\n \r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       Login\r\n//       <br/><br/>\r\n//       <div className=\"login-components\"> \r\n//         Username<br/>\r\n//         <input type=\"text\" {...username} autoComplete=\"new-password\" />\r\n//       </div>\r\n//       <div style={{ marginTop: 10 }}>\r\n//         Password<br />\r\n//         <input type=\"password\" {...password} autoComplete=\"new-password\" />\r\n//       </div>\r\n//       {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\r\n//       <input type=\"button\" value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading} /><br />\r\n//     </div>\r\n//   );\r\n// }\r\n \r\n// const useFormInput = initialValue => {\r\n//   const [value, setValue] = useState(initialValue);\r\n \r\n//   const handleChange = e => {\r\n//     setValue(e.target.value);\r\n//   }\r\n//   return {\r\n//     value,\r\n//     onChange: handleChange\r\n//   }\r\n// }\r\n \r\n// export default Login;\r\n\r\nimport React ,{ useState} from 'react'\r\nimport {Link } from 'react-router-dom';\r\nimport \"./Login.css\";\r\nimport urban_dictionary from './urban_dictionary.png'\r\nimport Firebase from './firebase/index'\r\n\r\nfunction Login() {\r\n    const [email, setemail] = useState('');\r\n    const [password, setpassword] = useState('');\r\n\r\n    const signIn= e=>{\r\n        e.preventDefault();\r\n        //firebase stuff\r\n        Firebase.doSignInWithEmailAndPassword(email, password);\r\n\r\n    }\r\n\r\n    const register= e=>{\r\n        e.preventDefault();\r\n        //firebase stuff\r\n\r\n        //  auth.createUserWithEmailAndPassword(email, password)\r\n        // .then(auth=>{   \r\n        //     console.log(auth);\r\n        // })\r\n        // .catch(error=> console.log(error.message))\r\n        Firebase.doCreateUserWithEmailAndPassword(email,password)\r\n\r\n    }\r\n    return (\r\n        <div class=\"body\">\r\n        <div className=\"login__body\">\r\n        <Link to=\"/search\">\r\n            <img \r\n            className=\"login__logo\"\r\n            src ={urban_dictionary}\r\n            alt=\"logo here\"/>\r\n            </Link>\r\n            <div className=\"login\">\r\n            <div className=\"login__container\">\r\n            \r\n            <br></br>\r\n                \r\n                <form>\r\n                <h1 className=\"sign_in\">SignIn</h1>\r\n                \r\n                    <h5>Enter the Email</h5>\r\n                    <input type=\"e-mail\" value={email} \r\n                    onChange={\r\n                                e=>{setemail(e.target.value)\r\n                                console.log(e.target.value)}}/> \r\n\r\n                    <h5>Enter the Password </h5>\r\n                    <input type=\"password\" value={password}\r\n                    onChange={\r\n                            e=>{setpassword(e.target.value)}}/> \r\n\r\n                <button className=\"login__signInButton\" onClick={signIn}> SignIn</button>\r\n                \r\n\r\n                </form>\r\n                <p align='center'>\r\n                    Did not have an account?\r\n                    register\r\n                </p>\r\n                <button className=\"login__registerButton\" onClick={register}> Create your account</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/Dictionary.123ccf86.mp4\";","import React from 'react'\r\nimport './Home.css'\r\nimport Dictionary from './Dictionary.mp4'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {BrowserRouter  as Router, Route, Switch, Link} from 'react-router-dom';\r\nimport Content from './Content'\r\nfunction Home() {\r\n    return (\r\n        <div >\r\n            <video autoplay playsinline >\r\n            <source src={Dictionary} type=\"video/mp4\"></source>\r\n            Your browser does not support the video tag.\r\n            </video>\r\n            <Link to=\"/search\" >\r\n             <div className=\"container_button\">\r\n                 <h1 className=\"buttons\">Search Here</h1>\r\n            </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n","import React, { useState, useEffect, ReactDOM } from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter  as Router, Route, Switch} from 'react-router-dom';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport Input from '@material-ui/core/Input';\r\nimport Collapsible from 'react-collapsible';\r\nimport Button from '@material-ui/core/Button'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Header from './header';\r\nimport ThumbDownOutlinedIcon from '@material-ui/icons/ThumbDownOutlined';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport Content from './Content';\r\nimport Login from './Login';\r\nimport Home from \"./Home\"\r\nexport default function App() {\r\n  useEffect(() => {\r\n      }, [])\r\n\r\n\r\nreturn (\r\n<Router> \r\n    <Switch>\r\n         <Route exact path=\"/search\">\r\n            <Content/>\r\n         </Route>\r\n        <Route exact path=\"/login\">\r\n            <Login/>\r\n        </Route>\r\n        <Route path=\"/\">\r\n            <Home/>\r\n         </Route>\r\n    </Switch>\r\n</Router>\r\n\r\n    );\r\n\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App   from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n    \r\n      <App/>\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}